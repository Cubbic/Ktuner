import wx
import analyse #soundanalyse
import Layout as ly  # Layout code generated by wxGlade
import gettext # for localisation shit required by wxGlade
import numpy,time ,math
import alsaaudio 
import threading 



def set_input_list():
    input_devices_list = get_input_devices()
    for i in input_devices_list :
        frame.input_list.Append(i)
        
    frame.input_list.SetSelection(0)
    print frame.input_list.GetSelection()
    
def get_input_devices ():
        return alsaaudio.pcms(alsaaudio.PCM_CAPTURE) 
        # TODO  too many devices are being shown

def show_derivation(pitch):
    """ Show first 2 decimal numbers as derivation """
    if pitch is None:
        frame.derivation.SetLabel("0")
    else:
        frac,whole = math.modf(pitch)

        deriv = ""
        for i in range(2,4) :
            str_frac = str(frac)
            deriv +=str_frac[i]
        
        frame.derivation.SetLabel(deriv)
        
def show_note(pitch):
    if pitch is None:
        frame.note.SetLabel("None")
    else:
        frac,whole = math.modf(pitch)
        note = 0 
        if frac <= 0.5 :
            note = int(whole)
        else :
            note = int(whole) +1
        frame.note.SetLabel(str (note))    
    

        
def start_stream ():
    inp = alsaaudio.PCM(type= alsaaudio.PCM_CAPTURE, mode=alsaaudio.PCM_NORMAL,device='default')
    inp.setchannels(1)
    inp.setrate(44100)
    inp.setformat(alsaaudio.PCM_FORMAT_S16_LE)
    inp.setperiodsize(1024)
    while True:
            length, data = inp.read()
            samps = numpy.fromstring(data, dtype='int16') 

            pitch = analyse.musical_detect_pitch(samps)          
            wx.CallAfter(show_derivation,pitch )  #CallAfter is necessary for making GUI method calls from non-GUI threads    
            wx.CallAfter(show_note,pitch) # pitch is passed as an argument





if __name__ == "__main__":
    gettext.install("app") 
    
    app = wx.App()
    frame = ly.MainFrame(None, wx.ID_ANY )
    #start code inserting

    set_input_list()
    detect_pitch_thread = threading.Thread(target=start_stream)
    detect_pitch_thread.start()

    #end code inserting
    ########app.SetTopWindow(frame)
    frame.Show()
    app.MainLoop()
    #after app.MainLoop() no code will be executed
    

    

        
    
        


    
    